{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///delegated ./node_modules/three/build/three.module.js from dll-reference vendor_99ce509b92924a7ce61e","webpack:///external \"vendor_99ce509b92924a7ce61e\"","webpack:///delegated ./node_modules/three-orbitcontrols/OrbitControls.js from dll-reference vendor_99ce509b92924a7ce61e","webpack:///./test/initScene.js","webpack:///./test/main.js","webpack:///./test/Maze.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","vendor_99ce509b92924a7ce61e","scene","camera","renderer","clock","maze","Maze","width","thickness","wallHeight","_classCallCheck","this","row","col","notRow","notCol","notWall","wall","graph","initMaze","initData","THREE","topWall","bottomWall","leftWall","rightWall","position","set","add","push","temp","length","wallclone","x","z","y","rotation","Math","PI","left","right","mazeData","isRow","frontPoint","nextPoint","splice","indexOf","top","bottom","sets","walls","j","choose","floor","random","a","b","Union_set","pop","find","data","start","path","DFS","front","now","raycaster","mouse","pickables","window","addEventListener","innerWidth","height","innerHeight","aspect","updateProjectionMatrix","setSize","document","e","preventDefault","clientX","clientY","setFromCamera","intersects","intersectObjects","console","log","remove","removeWall","lookAt","setClearColor","body","appendChild","domElement","forEach","tmp","init","animate","dt","getDelta","shift","requestAnimationFrame","render"],"mappings":"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,qBClFAhC,EAAAD,QAAAF,EAAA,qBCAAG,EAAAD,QAAAkC,6CCAAjC,EAAAD,QAAAF,EAAA,+CCEIqC,wLCGAC,EAAQC,EAAiBC,EAAiBC,ECFxCC,aAEF,SAAAA,EAAYlC,EAAEqB,EAAEc,EAAMC,EAAUC,gGAAWC,CAAAC,KAAAL,GACvCK,KAAKvC,EAAIA,EACTuC,KAAKlB,EAAIA,EACTkB,KAAKJ,MAAQA,EACbI,KAAKH,UAAYA,EACjBG,KAAKF,WAAaA,EAClBE,KAAKC,IAAM,GACXD,KAAKE,IAAM,GACXF,KAAKG,OAAS,GACdH,KAAKI,OAAS,GACdJ,KAAKK,QAAU,GAEfL,KAAKM,KAAO,GACZN,KAAKO,MAAQ,GAEbP,KAAKQ,SAAS/C,EAAEqB,EAAEc,EAAMC,EAAUC,2DAG7BrC,EAAEqB,EAAEc,EAAMC,EAAUC,GACzBE,KAAKS,SAAShD,EAAEqB,GAIC,IAAI4B,OAAW,IAAIA,cAAkBd,EAAOE,EAAYD,GAAY,IAAIa,sBAAzF,IAeIrD,EAbAsD,EAAU,IAAID,OAAW,IAAIA,cAAkB5B,EAAIc,EAAME,EAAWD,GAAW,IAAIa,sBACnFE,EAAa,IAAIF,OAAW,IAAIA,cAAkB5B,EAAIc,EAAME,EAAWD,GAAW,IAAIa,sBACtFG,EAAW,IAAIH,OAAW,IAAIA,cAAkBb,EAAUC,EAAWrC,EAAImC,GAAO,IAAIc,sBACpFI,EAAY,IAAIJ,OAAW,IAAIA,cAAkBb,EAAUC,EAAWrC,EAAImC,GAAO,IAAIc,sBAazF,IAXAC,EAAQI,SAASC,IAAIlC,EAAIc,EAAQ,EAAEE,EAAa,EAAE,GAClDc,EAAWG,SAASC,IAAIlC,EAAIc,EAAQ,EAAEE,EAAa,EAAErC,EAAImC,GACzDiB,EAASE,SAASC,IAAI,EAAElB,EAAa,EAAErC,EAAImC,EAAQ,GACnDkB,EAAUC,SAASC,IAAIlC,EAAIc,EAAOE,EAAa,EAAGrC,EAAImC,EAAQ,GAE9DN,EAAM2B,IAAIN,EAAQC,EAAWC,EAASC,GACtCd,KAAKM,KAAKY,KAAKP,EAAQC,EAAWC,EAASC,GAKvCzD,EAAI,EAAGA,EAAII,EAAIqB,EAAGzB,IAAI,CACtB,IAAI8D,EAAO,GAER9D,EAAIyB,GAAK,GACRqC,EAAKD,KAAK7D,EAAIyB,GACfzB,EAAIyB,GAAM,GACTqC,EAAKD,KAAK7D,EAAI,IACdA,EAAI,GAAKyB,GAAM,GACfqC,EAAKD,KAAK7D,EAAI,GACfA,EAAIyB,EAAIrB,EAAIqB,GACZqC,EAAKD,KAAK7D,EAAIyB,GAEjBkB,KAAKO,MAAMW,KAAKC,GAIpB,IAAK9D,EAAI,EAAGA,EAAI2C,KAAKC,IAAImB,OAAQ/D,IAAK,CAClC,IAAIgE,EAAY,IAAIX,OAAW,IAAIA,cAAkBd,EAAOE,EAAYD,GAAY,IAAIa,sBACxFW,EAAUN,SAASO,EAAKtB,KAAKC,IAAI5C,GAAG,GAAMuC,EAC1CyB,EAAUN,SAASQ,EAAIvB,KAAKC,IAAI5C,GAAG,GAAKuC,EAASA,EAAQ,EACzDyB,EAAUN,SAASS,EAAI1B,EAAa,EACpCuB,EAAUI,SAASD,EAAIE,KAAKC,GAAK,EAGjC,IAAIC,EAAQ5B,KAAKC,IAAI5C,GAAG,GAAK,EAAKyB,EAAIkB,KAAKC,IAAI5C,GAAG,GAC9CwE,EAAQ7B,KAAKC,IAAI5C,GAAG,GAAKyB,EAAIkB,KAAKC,IAAI5C,GAAG,GAE7CgE,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYJ,EACZK,UAAWJ,GAGf7B,KAAKM,KAAKY,KAAKG,GACf/B,EAAM2B,IAAII,GAEVrB,KAAKO,MAAMqB,GAAMM,OAAOlC,KAAKO,MAAMqB,GAAMO,QAAQN,GAAO,GACxD7B,KAAKO,MAAMsB,GAAOK,OAAOlC,KAAKO,MAAMsB,GAAOM,QAAQP,GAAM,GAG7D,IAAKvE,EAAI,EAAGA,EAAI2C,KAAKE,IAAIkB,OAAQ/D,IAAK,CAClC,IAAIgE,EAAY,IAAIX,OAAW,IAAIA,cAAkBd,EAAOE,EAAYD,GAAY,IAAIa,sBACxFW,EAAUN,SAASQ,EAAKvB,KAAKE,IAAI7C,GAAG,GAAMuC,EAC1CyB,EAAUN,SAASO,EAAItB,KAAKE,IAAI7C,GAAG,GAAKuC,EAASA,EAAQ,EACzDyB,EAAUN,SAASS,EAAI1B,EAAa,EAIpC,IAAIsC,GAAOpC,KAAKE,IAAI7C,GAAG,GAAK,GAAKyB,EAAIkB,KAAKE,IAAI7C,GAAG,GAC7CgF,EAASrC,KAAKE,IAAI7C,GAAG,GAAKyB,EAAIkB,KAAKE,IAAI7C,GAAG,GAE9CgE,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYI,EACZH,UAAWI,GAGfrC,KAAKM,KAAKY,KAAKG,GACf/B,EAAM2B,IAAII,GAEVrB,KAAKO,MAAM6B,GAAKF,OAAOlC,KAAKO,MAAM6B,GAAKD,QAAQE,GAAQ,GACvDrC,KAAKO,MAAM8B,GAAQH,OAAOlC,KAAKO,MAAM8B,GAAQF,QAAQC,GAAK,GAM9D,IAAK/E,EAAI,EAAGA,EAAI2C,KAAKI,OAAOgB,OAAQ/D,IAAK,CACrC,IAAIgE,EAAY,IAAIX,OAAW,IAAIA,cAAkBd,EAAOE,EAAYD,GAAY,IAAIa,sBACxFW,EAAUN,SAASQ,EAAKvB,KAAKI,OAAO/C,GAAG,GAAMuC,EAC7CyB,EAAUN,SAASO,EAAItB,KAAKI,OAAO/C,GAAG,GAAKuC,EAASA,EAAQ,EAC5DyB,EAAUN,SAASS,EAAI1B,EAAa,EAIpC,IAAIsC,GAAOpC,KAAKI,OAAO/C,GAAG,GAAK,GAAKyB,EAAIkB,KAAKI,OAAO/C,GAAG,GACnDgF,EAASrC,KAAKI,OAAO/C,GAAG,GAAKyB,EAAIkB,KAAKI,OAAO/C,GAAG,GAEpDgE,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYI,EACZH,UAAWI,GAGfrC,KAAKK,QAAQa,KAAKG,GAClB/B,EAAM2B,IAAII,GAId,IAAKhE,EAAI,EAAGA,EAAI2C,KAAKG,OAAOiB,OAAQ/D,IAAK,CACrC,IAAIgE,EAAY,IAAIX,OAAW,IAAIA,cAAkBd,EAAOE,EAAYD,GAAY,IAAIa,sBACxFW,EAAUN,SAASO,EAAKtB,KAAKG,OAAO9C,GAAG,GAAMuC,EAC7CyB,EAAUN,SAASQ,EAAIvB,KAAKG,OAAO9C,GAAG,GAAKuC,EAASA,EAAQ,EAC5DyB,EAAUN,SAASS,EAAI1B,EAAa,EACpCuB,EAAUI,SAASD,EAAIE,KAAKC,GAAK,EAGjC,IAAIC,EAAQ5B,KAAKG,OAAO9C,GAAG,GAAK,EAAKyB,EAAIkB,KAAKG,OAAO9C,GAAG,GACpDwE,EAAQ7B,KAAKG,OAAO9C,GAAG,GAAKyB,EAAIkB,KAAKG,OAAO9C,GAAG,GAEnDgE,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYJ,EACZK,UAAWJ,GAGf7B,KAAKK,QAAQa,KAAKG,GAClB/B,EAAM2B,IAAII,qCAKT5D,EAAEqB,GAIP,IAHA,IAAIwD,EAAO,GACPC,EAAQ,GAEJlF,EAAI,EAAGA,EAAII,EAAIqB,EAAGzB,IACtBiF,EAAKpB,KAAK7D,GAEd,IAAI,IAAIA,EAAI,EAAGA,EAAII,EAAGJ,IAClB,IAAI,IAAImF,EAAI,EAAGA,EAAI1D,EAAG0D,IAClBD,EAAMrB,KAAK,CAAC,EAAE7D,EAAEmF,IAIxB,IAAI,IAAInF,EAAI,EAAGA,EAAIyB,EAAGzB,IAClB,IAAI,IAAImF,EAAI,EAAGA,EAAI/E,EAAG+E,IAClBD,EAAMrB,KAAK,CAAC,EAAE7D,EAAEmF,IAIxB,KAAMD,EAAMnB,OAAS,GAAE,CACnB,IAAIqB,EAASf,KAAKgB,MAAOH,EAAMnB,OAASM,KAAKiB,UACzCC,OAAC,EAACC,OAAC,EAIiB,IAArBN,EAAME,GAAQ,IACbG,EAAIL,EAAME,GAAQ,GAAK3D,EAAIyD,EAAME,GAAQ,GAAK,EAC9CI,EAAIN,EAAME,GAAQ,GAAK3D,EAAIyD,EAAME,GAAQ,KAGzCG,GAAKL,EAAME,GAAQ,GAAK,GAAK3D,EAAIyD,EAAME,GAAQ,GAC/CI,EAAIN,EAAME,GAAQ,GAAK3D,EAAIyD,EAAME,GAAQ,KAG7B,IAAbH,EAAKM,KAA0B,IAAbN,EAAKO,IAAcC,EAAUF,EAAEC,GAOxB,IAArBN,EAAME,GAAQ,GACbzC,KAAKG,OAAOe,KAAK,CAACqB,EAAME,GAAQ,GAAGF,EAAME,GAAQ,KAEjDzC,KAAKI,OAAOc,KAAK,CAACqB,EAAME,GAAQ,GAAGF,EAAME,GAAQ,KAT7B,IAArBF,EAAME,GAAQ,GACbzC,KAAKC,IAAIiB,KAAK,CAACqB,EAAME,GAAQ,GAAGF,EAAME,GAAQ,KAE9CzC,KAAKE,IAAIgB,KAAK,CAACqB,EAAME,GAAQ,GAAGF,EAAME,GAAQ,KAStD,IAAItB,EAAOoB,EAAME,GACjBF,EAAME,GAAUF,EAAMA,EAAMnB,OAAS,GACrCmB,EAAMA,EAAMnB,OAAS,GAAKD,EAE1BoB,EAAMQ,MAIV,SAASD,EAAUxB,EAAEE,GACjB,IAAIoB,EAAII,EAAK1B,GACTuB,EAAIG,EAAKxB,GAEb,OAAGoB,IAAMC,IACLP,EAAKO,GAAKD,GACH,GAKf,SAASI,EAAKlE,GACV,OAAGA,GAAKwD,EAAKxD,GACFA,EACJwD,EAAKxD,GAAKkE,EAAKV,EAAKxD,wCAQxBmE,GACP,IAAIL,EAAIK,EAAKjB,WACTa,EAAII,EAAKhB,UAGTX,EAAII,KAAKgB,MAAME,EAAI5C,KAAKlB,GACxB0C,EAAIoB,EAAI5C,KAAKlB,EAAI,EAErB,GAAG+D,EAAID,GAAM,EAAE,CACX,IAAIvF,EACJ,IAAIA,EAAI,EAAGA,EAAI2C,KAAKC,IAAImB,SACjBpB,KAAKC,IAAI5C,GAAG,KAAOiE,GAAKtB,KAAKC,IAAI5C,GAAG,KAAOmE,GADlBnE,KAGhC2C,KAAKC,IAAIiC,OAAO7E,EAAE,OAEjB,CACD,IAAIA,EACJ,IAAIA,EAAI,EAAGA,EAAI2C,KAAKE,IAAIkB,SACjBpB,KAAKE,IAAI7C,GAAG,KAAOiE,GAAKtB,KAAKE,IAAI7C,GAAG,KAAOmE,GADlBnE,KAGhC2C,KAAKE,IAAIgC,OAAO7E,EAAE,GAGtB2C,KAAKO,MAAMqC,GAAG1B,KAAK2B,GACnB7C,KAAKO,MAAMsC,GAAG3B,KAAK0B,GAKnB,IAHA,IAAIM,EAAQN,EAERO,EAAO,GACH9F,EAAI,EAAGA,EAAI2C,KAAKO,MAAMqC,GAAGxB,OAAQ/D,IAAI,CACzC,IAAIiE,EAAI8B,EAAIpD,KAAKO,MAAMqC,EAAE5C,KAAKO,MAAMqC,GAAGvF,IACvC,IAAU,IAAPiE,EAAS,CACR6B,EAAKjC,KAAKI,GACV,OAIR,IAAImB,EAASf,KAAKgB,MAAOS,EAAK/B,OAASM,KAAKiB,UAU5C,GATGF,EAAS,IAAMU,EAAK/B,QACnBwB,EAAIO,EAAKV,GACTI,EAAIM,EAAK,KAGTP,EAAIO,EAAKV,GACTI,EAAIM,EAAKV,EAAS,IAGnBG,EAAIC,EAAE,CACL,IAAI1B,EAAOyB,EACXA,EAAIC,EACJA,EAAI1B,EAGRnB,KAAKO,MAAMqC,GAAGV,OAAOlC,KAAKO,MAAMqC,GAAGT,QAAQU,GAAG,GAC9C7C,KAAKO,MAAMsC,GAAGX,OAAOlC,KAAKO,MAAMsC,GAAGV,QAAQS,GAAG,GAE9C,IAAIvB,EAAY,IAAIX,OAAW,IAAIA,cAAkBV,KAAKJ,MAAOI,KAAKF,WAAYE,KAAKH,WAAY,IAAIa,sBAEvG,GAAGmC,EAAID,GAAM,EAAE,CACX,IAAItB,EAAII,KAAKgB,MAAME,EAAI5C,KAAKlB,GACxB0C,EAAIoB,EAAI5C,KAAKlB,EAAI,EAGrBkB,KAAKC,IAAIiB,KAAK,CAACI,EAAEE,IAEjBH,EAAUN,SAASO,EAAIE,EAAIxB,KAAKJ,MAChCyB,EAAUN,SAASQ,EAAID,EAAItB,KAAKJ,MAASI,KAAKJ,MAAQ,EACtDyB,EAAUN,SAASS,EAAIxB,KAAKF,WAAa,EACzCuB,EAAUI,SAASD,EAAIE,KAAKC,GAAK,EAEjCN,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYY,EACZX,UAAWY,OAGd,CACD,IAAIvB,EAAIsB,EAAI5C,KAAKlB,EACb0C,EAAIE,KAAKgB,MAAME,EAAI5C,KAAKlB,GAAK,EAEjCkB,KAAKE,IAAIgB,KAAK,CAACI,EAAEE,IAEjBH,EAAUN,SAASQ,EAAIC,EAAIxB,KAAKJ,MAChCyB,EAAUN,SAASO,EAAIA,EAAItB,KAAKJ,MAASI,KAAKJ,MAAQ,EACtDyB,EAAUN,SAASS,EAAIxB,KAAKF,WAAa,EAEzCuB,EAAUS,SAAW,CACjBC,OAAO,EACPC,WAAYY,EACZX,UAAWY,GAOnB,SAASO,EAAIH,EAAKI,EAAMC,GACpB,GAAGA,IAAQJ,EAAM,OAAOI,EAEpB,IAAI,IAAIjG,EAAI,EAAGA,EAAI4F,EAAKK,GAAKlC,OAAQ/D,IACjC,GAAG4F,EAAKK,GAAKjG,KAAOgG,EAAM,CACtB,IAAI/B,EAAI8B,EAAIH,EAAKK,EAAIL,EAAKK,GAAKjG,IAE/B,IAAU,IAAPiE,EAEC,OADA6B,EAAKjC,KAAKI,GACHgC,EAInB,OAAQ,EAhBhBhE,EAAM2B,IAAII,GACVrB,KAAKM,KAAKY,KAAKG,wCDnUhBkC,EAAY,IAAI7C,YAAmB8C,EAAQ,IAAI9C,UAAgB+C,EAAY,GAC9EnC,EAAI,EAERoC,OAAOC,iBAAiB,SA4DxB,WACI,IAAI/D,EAAQ8D,OAAOE,WACfC,EAASH,OAAOI,YACpBvE,EAAOwE,OAASnE,EAAQiE,EACxBtE,EAAOyE,yBACPxE,EAASyE,QAAQrE,EAAOiE,KAjEsB,GAElDK,SAASP,iBAAiB,YAwF1B,SAAqBQ,GACjBA,EAAEC,iBACFZ,EAAMlC,EAAK6C,EAAEE,QAAUX,OAAOE,WAAc,EAAI,EAChDJ,EAAMhC,GAAM2C,EAAEG,QAAUZ,OAAOI,YAAe,EAAI,EAElDP,EAAUgB,cAAcf,EAAOjE,GAC/B,IAAIiF,EAAajB,EAAUkB,iBAAiBhB,GACzCe,EAAWpD,OAAS,IACnBsD,QAAQC,IAAIH,EAAW,IAEpB,aAAcA,EAAW,GAAGzF,SAC3BO,EAAMsF,OAAOJ,EAAW,GAAGzF,QAC3BW,EAAKmF,WAAWL,EAAW,GAAGzF,OAAO+C,cApGC,GAKlD,WDXIxC,EAAQ,IAAIoB,QCcZjB,EAAQ,IAAIiB,SAEZnB,EAAS,IAAImB,oBAAwB,GAAIgD,OAAOE,WAAaF,OAAOI,YAAa,EAAG,MAC7E/C,SAASC,IAAI,IAAI,IAAI,KAC5BzB,EAAOuF,OAAO,IAAIpE,UAAc,IAAI,EAAE,MACtCpB,EAAM2B,IAAI1B,GAEG,IAAImB,aAAiB,IAAK,GAAI,MAAO,SAE3CK,SAASC,IAAI,IAAK,EAAG,KAE5B1B,EAAM2B,IAAI,IAAIP,aAAiB,MAG/BlB,EAAW,IAAIkB,iBACNuD,QAAQP,OAAOE,WAAYF,OAAOI,aAC3CtE,EAASuF,cAAc,SAIvBb,SAASc,KAAKC,YAAYzF,EAAS0F,aAGnCxF,EAAO,IAAIC,EAAK,GAAG,GAAG,GAAG,EAAE,KAEtBW,KAAK6E,QAAQ,SAAShB,GACvBV,EAAUvC,KAAKiD,KAGnBO,QAAQC,IAAIjF,EAAKY,KAAKc,QAEtB,IAAI,IAAI/D,EAAIqC,EAAKW,QAAQe,OAAS,EAAG/D,EAAI,EAAGA,IAAI,CAC5C,IAAImF,EAAId,KAAKgB,MAAMhB,KAAKiB,UAAYtF,EAAI,IAEpC+H,EAAM1F,EAAKW,QAAQhD,GACvBqC,EAAKW,QAAQhD,GAAKqC,EAAKW,QAAQmC,GAC/B9C,EAAKW,QAAQmC,GAAK4C,GA1C1BC,GAiEA,SAASC,IACL,IAAIC,EAAK9F,EAAM+F,WAEflE,GAAKiE,EAGFjE,GAAK,KAAQ5B,EAAKW,QAAQe,OAAS,IAClC9B,EAAMsF,OAAOlF,EAAKW,QAAQ,IAC1BX,EAAKW,QAAQoF,QAEbnE,EAAI,GAGRoE,sBAAsBJ,GAKtB9F,EAASmG,OAAOrG,EAAOC,GAlF3B+F","file":"main.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = (__webpack_require__(1))(0);","module.exports = vendor_99ce509b92924a7ce61e;","module.exports = (__webpack_require__(1))(2);","import * as THREE from 'three'\r\n\r\nvar scene;\r\n\r\nfunction initScene(){\r\n    scene = new THREE.Scene();\r\n}\r\n\r\nexport {scene, initScene}","import * as THREE from 'three'\r\nimport OrbitControls from 'three-orbitcontrols'\r\nimport {scene, initScene} from './initScene.js'\r\nimport {Maze} from './Maze.js'\r\n\r\nvar camera, renderer, stats, clock, controls, maze;\r\nvar i, raycaster = new THREE.Raycaster(), mouse = new THREE.Vector2(),pickables = [];\r\nvar x = 0;\r\n\r\nwindow.addEventListener('resize', onWindowResize, false);\r\n\r\ndocument.addEventListener('mousedown',onMouseDown,false);\r\n\r\ninit();\r\nanimate();\r\n\r\nfunction init() {\r\n\tinitScene();\r\n\t\r\n    clock = new THREE.Clock();\r\n\r\n    camera = new THREE.PerspectiveCamera(50, window.innerWidth / window.innerHeight, 1, 10000);\r\n    camera.position.set(250,750,250);\r\n    camera.lookAt(new THREE.Vector3(250,0,250));\r\n    scene.add(camera);\r\n\r\n    var gridXZ = new THREE.GridHelper(500, 10, 'red', 'white');\r\n    //scene.add(gridXZ);\r\n    gridXZ.position.set(250, 0, 250);\r\n    //gridXZ.rotation.x = Math.PI / 2;\r\n    scene.add(new THREE.AxisHelper(50));\r\n\r\n\r\n    renderer = new THREE.WebGLRenderer();\r\n    renderer.setSize(window.innerWidth, window.innerHeight);\r\n    renderer.setClearColor(0x888888);\r\n\r\n    //controls = new OrbitControls(camera, renderer.domElement);\r\n\r\n    document.body.appendChild(renderer.domElement);\r\n    \r\n\r\n    maze = new Maze(10,10,50,5,50);\r\n    \r\n    maze.wall.forEach(function(e){\r\n        pickables.push(e);\r\n    });\r\n\r\n    console.log(maze.wall.length);\r\n\r\n    for(let i = maze.notWall.length - 1; i > 0; i--){\r\n        let j = Math.floor(Math.random() * (i + 1));\r\n\r\n        let tmp = maze.notWall[i];\r\n        maze.notWall[i] = maze.notWall[j];\r\n        maze.notWall[j] = tmp;\r\n        \r\n    }\r\n\r\n}\r\n\r\n// 10*10 85 per    wall = 200-10-10 = 180 - 95 = 85; 47.22%\r\n// 15*15 200 per   wall = 450-15-15 = 420 - 220 = 200; 47.61%\r\n// 20*20 365 per   wall = 800-20-20 = 760 - 395 = 365; 48.02%\r\n// \r\n\r\n//\r\n//\r\n\r\nfunction onWindowResize() {\r\n    var width = window.innerWidth;\r\n    var height = window.innerHeight;\r\n    camera.aspect = width / height;\r\n    camera.updateProjectionMatrix();\r\n    renderer.setSize(width, height);\r\n}\r\n\r\n\r\nfunction animate() {\r\n    var dt = clock.getDelta();\r\n\r\n    x += dt;\r\n\r\n\r\n    if(x >= 0.25 && maze.notWall.length > 0){\r\n        scene.remove(maze.notWall[0]);\r\n        maze.notWall.shift();\r\n        \r\n        x = 0;\r\n    }\r\n\r\n    requestAnimationFrame(animate);\r\n    render();\r\n}\r\n\r\nfunction render() {\r\n    renderer.render(scene, camera);\r\n}\r\n\r\nfunction onMouseDown(e){\r\n    e.preventDefault();\r\n    mouse.x = (e.clientX / window.innerWidth) * 2 - 1;\r\n    mouse.y = -(e.clientY / window.innerHeight) * 2 + 1;\r\n\r\n    raycaster.setFromCamera(mouse, camera);\r\n    var intersects = raycaster.intersectObjects(pickables);\r\n    if(intersects.length > 0){\r\n        console.log(intersects[0]);\r\n        \r\n        if('mazeData' in intersects[0].object){\r\n            scene.remove(intersects[0].object);\r\n            maze.removeWall(intersects[0].object.mazeData);\r\n        }\r\n        \r\n    }\r\n\r\n}","import * as THREE from 'three'\r\nimport {scene} from './initScene.js'\r\n\r\nclass Maze{\r\n    // 製作一個M X N的迷宮，每個寬度為width，牆壁厚度為thickness，其高度為wallHeight\r\n    constructor(m,n,width,thickness,wallHeight){\r\n        this.m = m;\r\n        this.n = n;\r\n        this.width = width;\r\n        this.thickness = thickness;\r\n        this.wallHeight = wallHeight;\r\n        this.row = [];\r\n        this.col = [];\r\n        this.notRow = [];\r\n        this.notCol = [];\r\n        this.notWall = [];\r\n\r\n        this.wall = [];\r\n        this.graph = [];\r\n\r\n        this.initMaze(m,n,width,thickness,wallHeight);\r\n    }\r\n\r\n    initMaze(m,n,width,thickness,wallHeight){\r\n        this.initData(m,n);\r\n\r\n        //var totalinWall = new THREE.Object3D();\r\n        //var mat = new THREE.MeshNormalMaterial();\r\n        var insideWall = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n        \r\n        var topWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var bottomWall = new THREE.Mesh(new THREE.BoxGeometry(n * width,wallHeight,thickness),new THREE.MeshNormalMaterial());\r\n        var leftWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        var rightWall = new THREE.Mesh(new THREE.BoxGeometry(thickness,wallHeight,m * width),new THREE.MeshNormalMaterial());\r\n        \r\n        topWall.position.set(n * width / 2,wallHeight / 2,0);\r\n        bottomWall.position.set(n * width / 2,wallHeight / 2,m * width);\r\n        leftWall.position.set(0,wallHeight / 2,m * width / 2);\r\n        rightWall.position.set(n * width, wallHeight / 2, m * width / 2);\r\n\r\n        scene.add(topWall,bottomWall,leftWall,rightWall);\r\n        this.wall.push(topWall,bottomWall,leftWall,rightWall);\r\n\r\n        var i;\r\n        /*init Graph use adjency list*/\r\n        \r\n        for(i = 0; i < m * n; i++){\r\n            var temp = [];\r\n\r\n            if(i - n >= 0) // top\r\n                temp.push(i - n);\r\n            if(i % n !== 0) // left\r\n                temp.push(i - 1);\r\n            if((i + 1) % n !== 0) // right\r\n                temp.push(i + 1);\r\n            if(i + n < m * n) // bottom\r\n               temp.push(i + n); \r\n            \r\n            this.graph.push(temp);\r\n        }\r\n        \r\n        ///////////row/////////////\r\n        for (i = 0; i < this.row.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.x = (this.row[i][1]) * width;\r\n            wallclone.position.z = this.row[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            // update graph\r\n            let left = (this.row[i][1] - 1) + n * this.row[i][0];\r\n            let right = this.row[i][1] + n * this.row[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: left,\r\n                nextPoint: right\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[left].splice(this.graph[left].indexOf(right),1);\r\n            this.graph[right].splice(this.graph[right].indexOf(left),1);\r\n        }\r\n        ////////////////col/////////////////////  \r\n        for (i = 0; i < this.col.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.z = (this.col[i][1]) * width;\r\n            wallclone.position.x = this.col[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            //wallclone.rotation.y = Math.PI/2;\r\n\r\n            // update graph\r\n            let top = (this.col[i][1] - 1) * n + this.col[i][0];\r\n            let bottom = this.col[i][1] * n + this.col[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: top,\r\n                nextPoint: bottom\r\n            }\r\n\r\n            this.wall.push(wallclone);\r\n            scene.add(wallclone);\r\n\r\n            this.graph[top].splice(this.graph[top].indexOf(bottom),1);\r\n            this.graph[bottom].splice(this.graph[bottom].indexOf(top),1);\r\n        }\r\n\r\n        //console.log(this.wall.length);\r\n\r\n\r\n        for (i = 0; i < this.notCol.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.z = (this.notCol[i][1]) * width;\r\n            wallclone.position.x = this.notCol[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            //wallclone.rotation.y = Math.PI/2;\r\n\r\n            // update graph\r\n            let top = (this.notCol[i][1] - 1) * n + this.notCol[i][0];\r\n            let bottom = this.notCol[i][1] * n + this.notCol[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: top,\r\n                nextPoint: bottom\r\n            }\r\n\r\n            this.notWall.push(wallclone);\r\n            scene.add(wallclone);\r\n        }\r\n\r\n\r\n        for (i = 0; i < this.notRow.length; i++) {\r\n            let wallclone = new THREE.Mesh(new THREE.BoxGeometry(width, wallHeight, thickness), new THREE.MeshNormalMaterial());\r\n            wallclone.position.x = (this.notRow[i][1]) * width;\r\n            wallclone.position.z = this.notRow[i][0] * width + (width / 2);\r\n            wallclone.position.y = wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            // update graph\r\n            let left = (this.notRow[i][1] - 1) + n * this.notRow[i][0];\r\n            let right = this.notRow[i][1] + n * this.notRow[i][0];\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: left,\r\n                nextPoint: right\r\n            }\r\n\r\n            this.notWall.push(wallclone);\r\n            scene.add(wallclone);\r\n        }\r\n    }\r\n\r\n    // use kruskal's algorithm\r\n    initData(m,n){\r\n        var sets = [];\r\n        var walls = [];\r\n\r\n        for(let i = 0; i < m * n; i++)\r\n            sets.push(i);\r\n        \r\n        for(let i = 0; i < m; i++){\r\n            for(let j = 1; j < n; j++){\r\n                walls.push([0,i,j]);\r\n            }\r\n        }\r\n\r\n        for(let i = 0; i < n; i++){\r\n            for(let j = 1; j < m; j++){\r\n                walls.push([1,i,j]);\r\n            }\r\n        }\r\n\r\n        while(walls.length > 0){\r\n            let choose = Math.floor((walls.length * Math.random()));\r\n            let a,b;\r\n\r\n            //console.log('walls length: ' + walls.length);\r\n            //console.log('choose:' + choose);\r\n            if(walls[choose][0] === 0){\r\n                a = walls[choose][1] * n + walls[choose][2] - 1;\r\n                b = walls[choose][1] * n + walls[choose][2];\r\n            }\r\n            else {\r\n                a = (walls[choose][2] - 1) * n + walls[choose][1];\r\n                b = walls[choose][2] * n + walls[choose][1];\r\n            }\r\n\r\n            if(sets[a] === -1 || sets[b] === -1 || !Union_set(a,b)){\r\n                if(walls[choose][0] === 0)\r\n                    this.row.push([walls[choose][1],walls[choose][2]]);\r\n                else\r\n                    this.col.push([walls[choose][1],walls[choose][2]]);\r\n            }\r\n            else {\r\n                if(walls[choose][0] === 0)\r\n                    this.notRow.push([walls[choose][1],walls[choose][2]]);\r\n                else\r\n                    this.notCol.push([walls[choose][1],walls[choose][2]]);\r\n            }\r\n            \r\n            let temp = walls[choose];\r\n            walls[choose] = walls[walls.length - 1];\r\n            walls[walls.length - 1] = temp;\r\n\r\n            walls.pop();\r\n        }\r\n\r\n\r\n        function Union_set(x,y){\r\n            var a = find(x);\r\n            var b = find(y);\r\n\r\n            if(a !== b){\r\n                sets[b] = a;\r\n                return true;\r\n            }\r\n            else return false;\r\n        }\r\n\r\n        function find(n){\r\n            if(n == sets[n])\r\n                return n;\r\n            return sets[n] = find(sets[n]);\r\n        }\r\n    }\r\n\r\n\r\n    /*\r\n        data = {isRow, frontPoint, nextPoint}\r\n    */\r\n    removeWall(data){       //還沒做出row,col的刪除，pickable的刪除狀況，\r\n        let a = data.frontPoint;\r\n        let b = data.nextPoint;\r\n\r\n        \r\n        let x = Math.floor(a / this.n);\r\n        let y = a % this.n + 1;\r\n\r\n        if(b - a === 1){\r\n            let i;\r\n            for(i = 0; i < this.row.length; i++)\r\n                if(this.row[i][0] === x && this.row[i][1] === y)\r\n                    break;\r\n            this.row.splice(i,1);\r\n        }\r\n        else {\r\n            let i;\r\n            for(i = 0; i < this.col.length; i++)\r\n                if(this.col[i][0] === x && this.col[i][1] === y)\r\n                    break;\r\n            this.col.splice(i,1);\r\n        }\r\n\r\n        this.graph[a].push(b);\r\n        this.graph[b].push(a);\r\n        \r\n        var start = a;\r\n\r\n        var path = [];\r\n        for(let i = 0; i < this.graph[a].length; i++){\r\n            let x = DFS(this.graph,a,this.graph[a][i]);\r\n            if(x !== -1){\r\n                path.push(x);\r\n                break;\r\n            }\r\n        }\r\n\r\n        let choose = Math.floor((path.length * Math.random()));\r\n        if(choose + 1 === path.length){\r\n            a = path[choose];\r\n            b = path[0];\r\n        }\r\n        else {\r\n            a = path[choose];\r\n            b = path[choose + 1];\r\n        }\r\n\r\n        if(a > b){\r\n            let temp = a;\r\n            a = b;\r\n            b = temp;\r\n        }\r\n\r\n        this.graph[a].splice(this.graph[a].indexOf(b),1);\r\n        this.graph[b].splice(this.graph[b].indexOf(a),1);\r\n\r\n        let wallclone = new THREE.Mesh(new THREE.BoxGeometry(this.width, this.wallHeight, this.thickness), new THREE.MeshNormalMaterial());\r\n\r\n        if(b - a === 1){      //add row\r\n            let x = Math.floor(a / this.n);\r\n            let y = a % this.n + 1;\r\n            \r\n\r\n            this.row.push([x,y]);\r\n            \r\n            wallclone.position.x = y * this.width;\r\n            wallclone.position.z = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n            wallclone.rotation.y = Math.PI / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: true,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        else {          //add col\r\n            let x = a % this.n;\r\n            let y = Math.floor(a / this.n) + 1;\r\n\r\n            this.col.push([x,y]);\r\n\r\n            wallclone.position.z = y * this.width;\r\n            wallclone.position.x = x * this.width + (this.width / 2);\r\n            wallclone.position.y = this.wallHeight / 2;\r\n\r\n            wallclone.mazeData = {\r\n                isRow: false,\r\n                frontPoint: a,\r\n                nextPoint: b\r\n            }\r\n        }\r\n        \r\n        scene.add(wallclone);\r\n        this.wall.push(wallclone);\r\n\r\n        function DFS(data,front,now){\r\n            if(now === start)return now;\r\n            else {\r\n                for(let i = 0; i < data[now].length; i++){\r\n                    if(data[now][i] !== front){\r\n                        var x = DFS(data,now,data[now][i]);\r\n\r\n                        if(x !== -1){\r\n                            path.push(x);\r\n                            return now;\r\n                        }\r\n                    }\r\n                }\r\n                return -1;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport {Maze}"],"sourceRoot":""}